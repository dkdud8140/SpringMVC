@charset "UTF-8";

* {
	font-family: 'Noto Sans KR', sans-serif;
	box-sizing: border-box;
	padding: 0;
	margin: 0;
}

body, html {
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 100vh;
}

h1.page_title {
	width: 90%;
	/* top, right, bottom, left*/
	margin: 10px auto 0 auto;
}

section.main_sec {
	flex: auto;
}

/*
	style 지정을 할 때
	tag에 id나 class를 부착하지 않고 지정하는 경우
	
	1. 현재 main_layout.css 파일은 모든 jsp에서 공통으로 include
		모든 jsp에 있는 table에 공통으로 속성이 적용된다
	2. 만약 특정한 jsp파일에서만 table tag에 속성을 부여하고 싶으면
		table tag에 id나 class를 지정하고
		table#id, table.class 형식으로 style을 지정해야 한다.
	3. 전체 프로젝트의 view를 일관되게 구현하고자 할 때 
		대표적인 tag에 style을 지정하고 include 하여 사용하는 방법
*/
div.list_table_box {
	padding: 10px;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
	width: 90%;
	margin: 0 auto;
	text-align: center;
	/* csss 2.1 적용 spec
	table 구성했을 때 td에 있는 text(content)의 길이가 변동되거나 할 때
	table의 전체 모양이 움찔거리는 현상을 방지하는 속성 */
	table-layout: fixed;
}

table th, table td, table tr {
	border-top: 1px solid #aaa;
	padding: 5px 8px;
	/* text font 크기에 따라 높이를 고정하는 속성 */
	height: 2rem;
}

table td {
	text-align: left;
	padding-left: 10px;
	margin-left: 20px;
}

/* td의 text가 넘칠 경우 ellipsis를 적용하는데
단순히 td에 적용하면 이웃하는 다른 td의 글자와 겹치는 현상이 발생
이것을 방지하기 위하여 속성 설정 */
table td span {
	position: relative;
	height: 1.2rem;
	display: inline-block;
	margin-top: 5px;
}

table td label.truncate {
	max-width: 80px;
	overflow: hidden;
	display : inline-block;
	white-space: nowrap;
	text-overflow: ellipsis;
	cursor: inherit;
}

/* td에 마우스 호버되면 ellipsis를 해제하여 text를 그대로 보여주기 */
/*
table td:hover {
	overflow: visible;
	text-overflow: inherit;
}
*/

table td:hover label.truncate {
	position : absolute;
	max-width: none ;
	background-color: #aaa;
	overflow: visible;
	top : -6px;
	padding: 5px 20px 5px 0 ;
	z-index: 100;
}

table tr:last-child td {
	border-bottom: 1px solid #aaa;
}

table tr:nth-child(odd) {
	background-color: #ddd;
}

table tr:nth-child(even) {
	background-color: #aaa;
}

table tr:hover {
	background-color: aqua;
	cursor: pointer;
}

button {
	padding: 10px 20px;
	outline: 0;
	border: 0;
	margin-right: 5%;
	margin-top: 10px;
}

button:hover {
	box-shadow: 1px 1px 1px black;
}

div.btn_box {
	text-align: right;
}

div#modal {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	background-color: black;
	opacity: 0.3;
	z-index: 100;
	display: none;
}

div#modal span {
	position: absolute;
	display: inline-block;
	top: 30px;
	right: 30px;
	font-size: 30px;
	color: white;
	font-weight: 900;
	border-radius: 50%;
	padding: 10px 20px;
	transition: 0.6s;
}

div#modal span:hover {
	background-color: white;
	color: black;
	cursor: pointer;
}

section.search_sec {
	/*	바깥쪽 box의 position이 fixed로 되어있기 때문에
		내부의 box를 바깥 box의 중앙에 배치하기 위하여
		position을 absolute로 설정하여 위치를 지정하였다 
	*/
	position: absolute;
	top: 50%;
	left: 50%;
	/* 자기 몸체의 50%의 크기만큼 x,y방향으로 후진*/
	transform: translate(-50%, -50%);
	background-color: white;
	opacity: 1;
	width: 80%;
	height: 80%;
	display: flex;
	justify-content: center;
	align-content: center;
	overflow: auto;
	z-index: 200;
}

section.search_sec table {
	margin: 10px auto;
	width: 90%;
	opacity: 1;
}