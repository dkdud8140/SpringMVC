<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- localhost:8080/hello/static/** 로 요청을 하면
	/webapp/static 폴더에 있는 파일을 찾아서
	바로 reponse 하라
	이 요청은 Controller로 전달할 필요가 없다 -->
	<resources mapping="/static/**" location="/static/" />

	<!-- Spring Conterner가 클래스를 객체로 생성하여 보관하는데 그 때 생성된 객체들을 Web Project에서는 보통 
		Bean이라고 부른다. InternalResourceViewResolver 클래스를 사용하고 싶으니 bean으로 만들어서 컨테이너에 
		보관해 달라 이 클래스의 어떤 메소드를 호출하려고 했더니 클래스 맴버변수(private) 중에 prefix라는 변수 값과 suffix라는 
		변수 값이 필요하다. 그래서 미리 변수값을 setter 해달라고 지정 property로 지정한다 -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- scan을 할 때 scan하지 않아도 될 클래스를 스캔하면서 서버가 시작될 때 비효율적인 기능을 수행하는 것일 방지하기 
		위하여 스캔 범위를 c.c.h.controller, c.c.h.service로 제한하는 것이 좋다 -->
	<context:component-scan
		base-package="com.callor.hello.controller" />
	<context:component-scan
		base-package="com.callor.hello.service" />



</beans:beans>
